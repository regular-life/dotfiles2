# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh/
export LD_LIBRARY_PATH=/usr/local/boost_1_54_0/stage/lib:$LD_LIBRARY_PATH
#(cat ~/.cache/wal/sequences &)
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
ZSH_THEME="mh"

rc () {
  rustscan -a $1 -- -vv -sC -sV -T4 -oN ./nmap.initial
}
alias vim='nvim'
alias music1='tmux new-session "tmux source-file ~/.config/ncmpcpp/tmux_session"' # Tmux session with ncmpcpp and cover art
alias paci='sudo pacman -S' 
alias compile='sudo make clean install' 
alias music='~/.config/ncmpcpp/ncmpcpp-ueberzug/ncmpcpp-ueberzug'
alias picom_kawase='picom --backend glx --blur-method dual_kawase'
alias news='newsboat'
alias exp='chmod +x'
alias update='sudo pacman -Syu && yay -Syu && sudo snap refresh' --noconfirm
alias py='python'
alias switch-ls='/home/yash/Codes/wall-lock-bg-runner/forLockscreen'
alias switch-wp='/home/yash/Codes/wall-lock-bg-runner/forWallpaper'
alias intellij='intellij-idea-community'
# alias code='codium'
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    vi-mode
    git
    history-substring-search
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flayash
# export ARCHFLAyash="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Created by `pipx` on 2021-05-12 07:28:13
export PATH="$PATH:/home/sophos/.local/bin"
export PATH="$PATH:$HOME/.config/composer/vendor/bin"

ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
VI_MODE_SET_CURSOR=true

bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
bindkey "^[OA" history-substring-search-up
bindkey "^[OB" history-substring-search-down

bindkey "^P" up-line-or-history
bindkey "^[OA" up-line-or-beginning-search
bindkey "^[[5~" up-line-or-history
bindkey "^[[A" up-line-or-history
bindkey "^N" down-line-or-history
bindkey "^[OB" down-line-or-beginning-search
bindkey "^[[6~" down-line-or-history
bindkey "^[[B" down-line-or-history

# bindkey -M "jk" vi-movement-mode
bindkey -M viins 'jk' vi-cmd-mode
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# declare -a arr=("█▀▀ █▀
# █▄█ ▄█" "░██████╗░░██████╗
# ██╔════╝░██╔════╝
# ██║░░██╗░╚█████╗░
# ██║░░╚██╗░╚═══██╗
# ╚██████╔╝██████╔╝
# ░╚═════╝░╚═════╝░" "   ___________
#   / ____/ ___/
# / / __ \__ \ 
# / /_/ /___/ / 
# \____//____/" )

declare -a arr=("                    __  
  __  ______ ______/ /_ 
  / / / / __ \`/ ___/ __ \ 
/ /_/ / /_/ (__  ) / / / 
\__, /\__,_/____/_/ /_/ 
/____/                   ")

arr_size=${#arr[@]}
ind=$((1 + $RANDOM % $arr_size))
# neofetch
printf '%s\n' "${(%):-%F{green}${arr[$ind]}${(%):-%f}"

# get_wifi_status() {
#     local wifi_status="$(iw dev | awk '/ssid/ {print $2}')"
#     if [ -n "$wifi_status" ]; then
#         echo -n "$fg[blue]WiFi: Connected to $wifi_status"
#     else
#         echo -n "$fg[blue]WiFi: Disconnected"
#     fi
# }

# get_bluetooth_status() {
#     local bluetooth_status="$(bluetoothctl info | grep "Connected: yes" | awk '{print $2}')"
#     if [ -n "$bluetooth_status" ]; then
#         echo -n "$fg[blue]Bluetooth: Connected to $bluetooth_status"
#     else
#         echo -n "$fg[blue]Bluetooth: Disconnected"
#     fi
# }

# print_status() {
#     local wifi_status="$(get_wifi_status)"
#     local bluetooth_status="$(get_bluetooth_status)"

#     echo "$wifi_status"
#     echo "$bluetooth_status"
# }

# print_status

# Codon compiler path (added by install script)
export PATH=/home/yash/.codon/bin:$PATH

